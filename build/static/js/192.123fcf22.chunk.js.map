{"version":3,"sources":["views/invoiceApp/list/columns.js","views/invoiceApp/store/actions/index.js","views/invoiceApp/list/index.js"],"names":["invoiceStatusObj","Sent","color","icon","Send","Paid","CheckCircle","draft","Edit","Downloaded","ArrowDownCircle","published","PieChart","renderClient","row","Math","floor","random","avatar","length","className","img","width","height","content","RecipientCompanyName","toUpperCase","initials","columns","name","minWidth","selector","cell","to","id","size","sortable","Status","Icon","email","RecipientCompanyEmail","Currency","Amount","toLocaleString","moment","createdAt","format","DueAt","balance","Balance","Badge","pill","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","href","onClick","e","preventDefault","Link","getFilteredData","invoices","params","dispatch","a","q","perPage","page","status","queryLowered","toLowerCase","filteredData","filter","invoice","includes","type","data","paginateArray","totalPages","CustomHeader","handleFilter","value","handleStatusValue","statusValue","handlePerPage","rowsPerPage","Row","Col","lg","Label","for","CustomInput","onChange","Button","Ripple","Input","target","placeholder","InvoiceList","useDispatch","store","useSelector","state","useState","setValue","currentPage","setCurrentPage","setStatusValue","setRowsPerPage","useEffect","apiRequest","url","method","response","console","log","error","swal","allData","Card","noHeader","pagination","paginationServer","subHeader","responsive","sortIcon","defaultSortField","paginationDefaultPage","paginationComponent","count","Number","total","toFixed","pageCount","nextLabel","breakLabel","previousLabel","activeClassName","breakClassName","breakLinkClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","slice","dataToRender","subHeaderComponent","val","parseInt"],"mappings":"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","file":"static/js/192.123fcf22.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Badge, UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport {\n  Eye,\n  TrendingUp,\n  Send,\n  MoreVertical,\n  Download,\n  Edit,\n  Trash,\n  Copy,\n  CheckCircle,\n  Save,\n  ArrowDownCircle,\n  Info,\n  PieChart\n} from 'react-feather'\n\n// ** Vars\nconst invoiceStatusObj = {\n  Sent: { color: 'light-secondary', icon: Send },\n  Paid: { color: 'light-success', icon: CheckCircle },\n  draft: { color: 'light-primary', icon: Edit },\n  Downloaded: { color: 'light-info', icon: ArrowDownCircle },\n  published: { color: 'light-success', icon: Send },\n  'Partial Payment': { color: 'light-warning', icon: PieChart }\n}\n\n// ** renders client column\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar?.length) {\n    return <Avatar className='mr-50' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color} className='mr-50' content={row.RecipientCompanyName.toUpperCase() || 'John Doe'} initials />\n  }\n}\n\n// ** Table columns\nexport const columns = [\n  {\n    name: '#',\n    minWidth: '20px',\n    selector: 'id',\n    cell: row => <Link to={`/apps/invoice/preview/${row.id}`}>{`#${row.id}`}</Link>\n  },\n  {\n    name: <TrendingUp size={14} />,\n    minWidth: '20px',\n    selector: 'Status',\n    sortable: true,\n    cell: row => {\n      const color = invoiceStatusObj[row.Status] ? invoiceStatusObj[row.Status].color : 'primary',\n        Icon = invoiceStatusObj[row.Status] ? invoiceStatusObj[row.Status].icon : Edit\n      return <Avatar color={color} icon={<Icon size={14} />} />\n    }\n  },\n  {\n    name: 'Client',\n    width: '250px',\n    selector: 'RecipientCompanyName',\n    sortable: true,\n    cell: row => {\n      const name = row.RecipientCompanyName || 'Fountain Pay',\n        email = row.RecipientCompanyEmail || 'support@fountainpay.ng'\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          {renderClient(row)}\n          <div className='d-flex flex-column'>\n            <h6 className='user-name text-truncate mb-0'>{name}</h6>\n            <small className='text-truncate text-muted mb-0'>{email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Total',\n    selector: 'total',\n    sortable: true,\n    minWidth: '150px',\n    width: '150px',\n    cell: row => <span>{row.Currency} {row.Amount.toLocaleString() || 0}</span>\n  },\n  {\n    name: 'Issued Date',\n    selector: 'createdAt',\n    sortable: true,\n    minWidth: '100px',\n    width: '150px',\n    cell: row => moment(row.createdAt).format('ll')\n  },\n  {\n    name: 'Due Date',\n    selector: 'DueAt',\n    sortable: true,\n    minWidth: '100px',\n    width: '150px',\n    cell: row => moment(row.DueAt).format('ll')\n  },\n  {\n    name: 'Balance',\n    selector: 'balance',\n    sortable: true,\n    minWidth: '164px',\n    cell: row => {\n      return row.balance !== 0 ? (\n        <span>{row.Currency} {row.Balance.toLocaleString() || 0}</span>\n      ) : (\n        <Badge color='light-success' pill>\n          Paid\n        </Badge>\n      )\n    }\n  },\n  {\n    name: 'Action',\n    minWidth: '70px',\n    width: '150px',\n    selector: '',\n    sortable: true,\n    cell: row => (\n      <div className='column-action d-flex align-items-center'>\n        <Send size={17} />\n        <Link to={`/invoice/preview/${row.id}`}>\n          <Eye size={17} className='mx-1' />\n        </Link>\n        <UncontrolledDropdown>\n          <DropdownToggle tag='span'>\n            <MoreVertical size={17} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Download size={14} className='mr-50' />\n              <span className='align-middle'>Download</span>\n            </DropdownItem>\n            <DropdownItem tag={Link} to={`/invoice/edit/${row.id}`} className='w-100'>\n              <Edit size={14} className='mr-50' />\n              <span className='align-middle'>Edit</span>\n            </DropdownItem>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Trash size={14} className='mr-50' />\n              <span className='align-middle'>Delete</span>\n            </DropdownItem>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Copy size={14} className='mr-50' />\n              <span className='align-middle'>Duplicate</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    )\n  }\n]\n","import axios from 'axios'\nimport { paginateArray, sortCompare, apiRequest, swal } from '@utils'\n\n// Get data\nexport const getData = () => {\n  return async dispatch => {\n    const response = await apiRequest({ url: '/invoices/get', method: 'POST' }, dispatch)\n    if (response) {\n      console.log(response.data)\n      if (response.data.data && response.data.status) {\n        await dispatch({\n          type: 'GET_ALL_INVOICE_DATA',\n          data: response.data.data\n        })\n      } else {\n        console.log(response.error)\n      }\n    } else {\n      swal('Oops!', 'Somthing went wrong with your network.', 'error')\n    }\n  }\n}\n\n// ** Get filtered data on page or row change\nexport const getFilteredData = (invoices, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 10, page = 1, status = null} = params\n\n    /* eslint-disable  */\n    const queryLowered = q.toLowerCase()\n    const filteredData = invoices?.filter(\n      invoice =>\n        (invoice?.RecipientCompanyName?.toLowerCase().includes(queryLowered) || \n        invoice?.RecipientCompanyEmail?.toLowerCase()?.includes(queryLowered)) && \n        invoice.Status.toLowerCase() === (status.toLowerCase() || invoice.Status.toLowerCase())\n    )\n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_INVOICE_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\nexport const getInvoiceData = (invoices, id) => {\n  return async dispatch => {\n    const invoice = invoices.find(i => i.id === id)\n    dispatch({\n      type: 'GET_INVOICE_DATA',\n      selectedContact: invoice\n    })\n  }\n}\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Button, Label, Input, CustomInput, Row, Col, Card } from 'reactstrap'\n\n// ** Store & Actions\nimport { getData, getFilteredData } from '../store/actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst CustomHeader = ({ handleFilter, value, handleStatusValue, statusValue, handlePerPage, rowsPerPage }) => {\n  return (\n    <div className='invoice-list-table-header w-100 py-2'>\n      <Row>\n        <Col lg='6' className='d-flex align-items-center px-0 px-lg-1'>\n          <div className='d-flex align-items-center mr-2'>\n            <Label for='rows-per-page'>Show</Label>\n            <CustomInput\n              className='form-control ml-50 pr-3'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </CustomInput>\n          </div>\n          <Button.Ripple tag={Link} to='/apps/invoice/add' color='primary'>\n            Add Record\n          </Button.Ripple>\n        </Col>\n        <Col\n          lg='6'\n          className='actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pr-lg-1 p-0'\n        >\n          <div className='d-flex align-items-center'>\n            <Label for='search-invoice'>Search</Label>\n            <Input\n              id='search-invoice'\n              className='ml-50 mr-2 w-100'\n              type='text'\n              value={value}\n              onChange={e => handleFilter(e.target.value)}\n              placeholder='Search Invoice'\n            />\n          </div>\n          <Input className='w-auto ' type='select' value={statusValue} onChange={handleStatusValue}>\n            <option value=''>Select Status</option>\n            <option value='downloaded'>Downloaded</option>\n            <option value='draft'>Draft</option>\n            <option value='paid'>Paid</option>\n            <option value='partial payment'>Partial Payment</option>\n            <option value='published'>Published</option>\n            <option value='partial payment'>Partial Payment</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst InvoiceList = () => {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n\n  const [value, setValue] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [statusValue, setStatusValue] = useState('')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    dispatch(getData())\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: value\n      })\n    )\n  }, [dispatch])\n\n  const handleFilter = val => {\n    setValue(val)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: val\n      })\n    )\n  }\n\n  const handlePerPage = e => {\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: parseInt(e.target.value),\n        status: statusValue,\n        q: value\n      })\n    )\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const handleStatusValue = e => {\n    setStatusValue(e.target.value)\n    dispatch(\n      getFilteredData(store.allData, {\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: e.target.value,\n        q: value\n      })\n    )\n  }\n\n  const handlePagination = page => {\n    dispatch(\n      getFilteredData(store.allData, {\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        pageCount={count || 1}\n        nextLabel=''\n        breakLabel='...'\n        previousLabel=''\n        activeClassName='active'\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\n      />\n    )\n  }\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <div className='invoice-list-dataTable'>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            subHeader={true}\n            columns={columns}\n            responsive={true}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n            paginationDefaultPage={currentPage}\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n            subHeaderComponent={\n              <CustomHeader\n                value={value}\n                statusValue={statusValue}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                handleStatusValue={handleStatusValue}\n              />\n            }\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default InvoiceList\n"],"sourceRoot":""}