{"version":3,"sources":["views/apps/ecommerce/checkout/steps/Cart.js","views/apps/ecommerce/checkout/steps/Address.js","views/apps/ecommerce/checkout/steps/Payment.js","views/apps/ecommerce/checkout/index.js"],"names":["Cart","props","products","stepper","deleteCartItem","dispatch","addToWishlist","deleteWishlistItem","getCartItems","formatDate","value","formatting","month","day","year","Intl","DateTimeFormat","format","Date","className","length","map","item","Card","to","slug","src","image","alt","name","CardBody","href","onClick","e","preventDefault","brand","Array","fill","listItem","index","classnames","rating","qty","min","max","size","style","width","height","shippingDate","discountPercentage","offers","price","hasFreeShipping","CardText","Badge","color","pill","Button","id","val","isInWishlist","InputGroup","Input","placeholder","InputGroupAddon","addonType","InputGroupText","Ripple","block","disabled","next","Address","onSubmit","event","errors","CardHeader","CardTitle","tag","Row","Col","md","sm","FormGroup","Label","for","required","type","Payment","Form","CustomInput","defaultChecked","label","Checkout","ref","useRef","useState","setStepper","useDispatch","store","useSelector","state","ecommerce","useEffect","steps","title","subtitle","icon","content","cart","breadCrumbTitle","breadCrumbParent","breadCrumbActive","instance","el","options","linear"],"mappings":"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","file":"static/js/203.6d5aadea.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { X, Heart, Star } from 'react-feather'\nimport { Card, CardBody, CardText, Button, Badge, InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap'\n\n// ** Custom Components\nimport NumberInput from '@components/number-input'\n\nconst Cart = props => {\n  // ** Props\n  const { products, stepper, deleteCartItem, dispatch, addToWishlist, deleteWishlistItem, getCartItems } = props\n\n  // ** Function to convert Date\n  const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n    if (!value) return value\n    return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n  }\n\n  // ** Funciton Function to toggle wishlist item\n  const handleWishlistClick = (id, val) => {\n    if (val) {\n      dispatch(deleteWishlistItem(id))\n    } else {\n      dispatch(addToWishlist(id))\n    }\n    dispatch(getCartItems())\n  }\n\n  // ** Render cart items\n  const renderCart = () => {\n    return products.map(item => {\n      return (\n        <Card key={item.name} className='ecommerce-card'>\n          <div className='item-img'>\n            <Link to={`/apps/ecommerce/product/${item.slug}`}>\n              <img className='img-fluid' src={item.image} alt={item.name} />\n            </Link>\n          </div>\n          <CardBody>\n            <div className='item-name'>\n              <h6 className='mb-0'>\n                <Link to={`/apps/ecommerce/product/${item.slug}`}>{item.name}</Link>\n              </h6>\n              <span className='item-company'>\n                By\n                <a className='ml-25' href='/' onClick={e => e.preventDefault()}>\n                  {item.brand}\n                </a>\n              </span>\n              <div className='item-rating'>\n                <ul className='unstyled-list list-inline'>\n                  {new Array(5).fill().map((listItem, index) => {\n                    return (\n                      <li key={index} className='ratings-list-item mr-25'>\n                        <Star\n                          className={classnames({\n                            'filled-star': index + 1 <= item.rating,\n                            'unfilled-star': index + 1 > item.rating\n                          })}\n                        />\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n            </div>\n            <span className='text-success mb-1'>In Stock</span>\n            <div className='item-quantity'>\n              <span className='quantity-title mr-50'>Qty</span>\n              <NumberInput value={item.qty} min={1} max={10} size='sm' style={{ width: '7rem', height: '2.15rem' }} />\n            </div>\n            <div className='delivery-date text-muted'>Delivery by, {formatDate(item.shippingDate)}</div>\n            <span className='text-success'>\n              {item.discountPercentage}% off {item.offers} offers Available\n            </span>\n          </CardBody>\n          <div className='item-options text-center'>\n            <div className='item-wrapper'>\n              <div className='item-cost'>\n                <h4 className='item-price'>${item.price}</h4>\n                {item.hasFreeShipping ? (\n                  <CardText className='shipping'>\n                    <Badge color='light-success' pill>\n                      Free Shipping\n                    </Badge>\n                  </CardText>\n                ) : null}\n              </div>\n            </div>\n            <Button className='mt-1 remove-wishlist' color='light' onClick={() => dispatch(deleteCartItem(item.id))}>\n              <X size={14} className='mr-25' />\n              <span>Remove</span>\n            </Button>\n            <Button\n              className='btn-cart'\n              color='primary'\n              onClick={() => handleWishlistClick(item.id, item.isInWishlist)}\n            >\n              <Heart\n                size={14}\n                className={classnames('mr-25', {\n                  'fill-current': item.isInWishlist\n                })}\n              />\n              <span className='text-truncate'>Wishlist</span>\n            </Button>\n          </div>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <div className='list-view product-checkout'>\n      <div className='checkout-items'>{products.length ? renderCart() : <h4>Your cart is empty</h4>}</div>\n      <div className='checkout-options'>\n        <Card>\n          <CardBody>\n            <label className='section-label mb-1'>Options</label>\n            <InputGroup className='input-group-merge coupons'>\n              <Input placeholder='Coupons' />\n              <InputGroupAddon addonType='append'>\n                <InputGroupText className='text-primary'>Apply</InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n            <hr />\n            <div className='price-details'>\n              <h6 className='price-title'>Price Details</h6>\n              <ul className='list-unstyled'>\n                <li className='price-detail'>\n                  <div className='detail-title'>Total MRP</div>\n                  <div className='detail-amt'>$598</div>\n                </li>\n                <li className='price-detail'>\n                  <div className='detail-title'>Bag Discount</div>\n                  <div className='detail-amt discount-amt text-success'>-25$</div>\n                </li>\n                <li className='price-detail'>\n                  <div className='detail-title'>Estimated Tax</div>\n                  <div className='detail-amt'>$1.3</div>\n                </li>\n                <li className='price-detail'>\n                  <div className='detail-title'>EMI Eligibility</div>\n                  <a href='/' className='detail-amt text-primary' onClick={e => e.preventDefault()}>\n                    Details\n                  </a>\n                </li>\n                <li className='price-detail'>\n                  <div className='detail-title'>Delivery Charges</div>\n                  <div className='detail-amt discount-amt text-success'>Free</div>\n                </li>\n              </ul>\n              <hr />\n              <ul className='list-unstyled'>\n                <li className='price-detail'>\n                  <div className='detail-title detail-total'>Total</div>\n                  <div className='detail-amt font-weight-bolder'>$574</div>\n                </li>\n              </ul>\n              <Button.Ripple\n                color='primary'\n                classnames='btn-next place-order'\n                block\n                disabled={!products.length}\n                onClick={() => stepper.next()}\n              >\n                Place Order\n              </Button.Ripple>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default Cart\n","// ** Third Party Components\nimport { Card, Label, FormGroup, CardHeader, CardTitle, CardBody, CardText, Button, Row, Col } from 'reactstrap'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\n\nconst Address = props => {\n  // ** Props\n  const { stepper } = props\n\n  // ** On form submit if there are no errors then go to next step\n  const onSubmit = (event, errors) => {\n    if (!errors.length) {\n      stepper.next()\n    }\n    event.preventDefault()\n  }\n\n  return (\n    <AvForm className='list-view product-checkout' onSubmit={onSubmit}>\n      <Card>\n        <CardHeader className='flex-column align-items-start'>\n          <CardTitle tag='h4'>Add New Address</CardTitle>\n          <CardText className='text-muted mt-25'>\n            Be sure to check \"Deliver to this address\" when you have finished\n          </CardText>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='checkout-name'>Full Name:</Label>\n                <AvInput name='checkout-name' id='checkout-name' placeholder='John Doe' required />\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='checkout-number'>Number:</Label>\n                <AvInput type='number' name='checkout-number' id='checkout-number' placeholder='0123456789' required />\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='checkout-apt-number'>Flat, House No:</Label>\n                <AvInput\n                  type='number'\n                  name='checkout-apt-number'\n                  id='checkout-apt-number'\n                  placeholder='9447 Glen Eagles Drive'\n                  required\n                />\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='checkout-landmark'>Landmark e.g. near apollo hospital:</Label>\n                <AvInput name='checkout-landmark' id='checkout-landmark' placeholder='Near Apollo Hospital' required />\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='checkout-city'>Town/City:</Label>\n                <AvInput name='checkout-city' id='checkout-city' placeholder='Tokyo' required />\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='checkout-pincode'>Pincode:</Label>\n                <AvInput type='number' name='checkout-pincode' id='checkout-pincode' placeholder='201301' required />\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='checkout-state'>State:</Label>\n                <AvInput name='checkout-state' id='checkout-state' placeholder='California' required />\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup className='mb-2'>\n                <Label for='add-type'>Address Type:</Label>\n                <AvInput type='select' name='add-type' id='add-type' required>\n                  <option value='home'>Home</option>\n                  <option value='work'>Work</option>\n                </AvInput>\n              </FormGroup>\n            </Col>\n            <Col sm='12'>\n              <Button.Ripple type='submit' className='btn-next delivery-address' color='primary'>\n                Save And Deliver Here\n              </Button.Ripple>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <div className='customer-card'>\n        <Card>\n          <CardHeader>\n            <CardTitle tag='h4'>John Doe</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <CardText className='mb-0'>9447 Glen Eagles Drive</CardText>\n            <CardText>Lewis Center, OH 43035</CardText>\n            <CardText>UTC-5: Eastern Standard Time (EST)</CardText>\n            <CardText>202-555-0140</CardText>\n            <Button\n              block\n              type='button'\n              color='primary'\n              onClick={() => stepper.next()}\n              className='btn-next delivery-address mt-2'\n            >\n              Deliver To This Address\n            </Button>\n          </CardBody>\n        </Card>\n      </div>\n    </AvForm>\n  )\n}\n\nexport default Address\n","// ** Third Party Components\nimport { PlusCircle } from 'react-feather'\nimport { Form, Label, Input, Button, Card, CardHeader, CardTitle, CardBody, CardText, CustomInput } from 'reactstrap'\n\nconst Payment = () => {\n  return (\n    <Form\n      className='list-view product-checkout'\n      onSubmit={e => {\n        e.preventDefault()\n      }}\n    >\n      <div className='payment-type'>\n        <Card>\n          <CardHeader className='flex-column align-items-start'>\n            <CardTitle tag='h4'>Payment options</CardTitle>\n            <CardText className='text-muted mt-25'>Be sure to click on correct payment option</CardText>\n          </CardHeader>\n          <CardBody>\n            <h6 className='card-holder-name my-75'>John Doe</h6>\n            <CustomInput\n              id='card'\n              type='radio'\n              defaultChecked\n              label='US Unlocked Debit Card 12XX XXXX XXXX 0000'\n              name='paymentMethod'\n            />\n            <div className='customer-cvv mt-1'>\n              <div className='form-inline'>\n                <Label className='mb-50' for='card-holder-cvv'>\n                  Enter CVV:\n                </Label>\n                <Input className='input-cvv ml-sm-75 ml-0 mb-50' id='card-holder-cvv' />\n                <Button className='btn-cvv ml-0 ml-sm-1 mb-50' color='primary'>\n                  Continue\n                </Button>\n              </div>\n            </div>\n            <hr className='my-2' />\n            <ul className='other-payment-options list-unstyled'>\n              <li className='py-50'>\n                <CustomInput type='radio' label='Credit / Debit / ATM Card' name='paymentMethod' id='payment-card' />\n              </li>\n              <li className='py-50'>\n                <CustomInput type='radio' label='Net Banking' name='paymentMethod' id='payment-net-banking' />\n              </li>\n              <li className='py-50'>\n                <CustomInput type='radio' label='EMI (Easy Installment)' name='paymentMethod' id='payment-emi' />\n              </li>\n              <li className='py-50'>\n                <CustomInput type='radio' label='Cash On Delivery' name='paymentMethod' id='payment-cod' />\n              </li>\n            </ul>\n            <hr className='my-2' />\n            <div className='gift-card mb-25'>\n              <CardText>\n                <PlusCircle className='mr-50' size={21} />\n                <span className='align-middle'>Add Gift Card</span>\n              </CardText>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n      <div className='amount-payable checkout-options'>\n        <Card>\n          <CardHeader>\n            <CardTitle tag='h4'>Price Details</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <ul className='list-unstyled price-details'>\n              <li className='price-detail'>\n                <div className='details-title'>Price of 3 items</div>\n                <div className='detail-amt'>\n                  <strong>$699.30</strong>\n                </div>\n              </li>\n              <li className='price-detail'>\n                <div className='details-title'>Delivery Charges</div>\n                <div className='detail-amt discount-amt text-success'>Free</div>\n              </li>\n            </ul>\n            <hr />\n            <ul className='list-unstyled price-details'>\n              <li className='price-detail'>\n                <div className='details-title'>Amount Payable</div>\n                <div className='detail-amt font-weight-bolder'>$699.30</div>\n              </li>\n            </ul>\n          </CardBody>\n        </Card>\n      </div>\n    </Form>\n  )\n}\n\nexport default Payment\n","// ** React Imports\nimport { Fragment, useEffect, useRef, useState } from 'react'\n\n// ** Custom Components\nimport Wizard from '@components/wizard'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Steps\nimport Cart from './steps/Cart'\nimport Address from './steps/Address'\nimport Payment from './steps/Payment'\n\n// ** Third Party Components\nimport { ShoppingCart, Home, CreditCard } from 'react-feather'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCartItems, deleteCartItem, deleteWishlistItem, addToWishlist } from '../store/actions'\n\n// ** Styles\nimport '@styles/base/pages/app-ecommerce.scss'\n\nconst Checkout = () => {\n  // ** Ref & State\n  const ref = useRef(null)\n  const [stepper, setStepper] = useState(null)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.ecommerce)\n\n  // ** Get Cart Items on mount\n  useEffect(() => {\n    dispatch(getCartItems())\n  }, [])\n\n  const steps = [\n    {\n      id: 'cart',\n      title: 'Cart',\n      subtitle: 'Your Cart Items',\n      icon: <ShoppingCart size={18} />,\n      content: (\n        <Cart\n          stepper={stepper}\n          dispatch={dispatch}\n          products={store.cart}\n          getCartItems={getCartItems}\n          addToWishlist={addToWishlist}\n          deleteCartItem={deleteCartItem}\n          deleteWishlistItem={deleteWishlistItem}\n        />\n      )\n    },\n    {\n      id: 'Address',\n      title: 'Address',\n      subtitle: 'Enter Your Address',\n      icon: <Home size={18} />,\n      content: <Address stepper={stepper} />\n    },\n    {\n      id: 'payment',\n      title: 'Payment',\n      subtitle: 'Select Payment Method',\n      icon: <CreditCard size={18} />,\n      content: <Payment stepper={stepper} />\n    }\n  ]\n\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Checkout' breadCrumbParent='eCommerce' breadCrumbActive='Checkout' />\n      <Wizard\n        ref={ref}\n        steps={steps}\n        className='checkout-tab-steps'\n        instance={el => setStepper(el)}\n        options={{\n          linear: false\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default Checkout\n"],"sourceRoot":""}