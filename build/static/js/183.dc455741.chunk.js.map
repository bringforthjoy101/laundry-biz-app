{"version":3,"sources":["views/tuck-shop/order/view/UserInfoCard.js","views/tuck-shop/order/view/index.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardText.js","views/tuck-shop/order/store/action/index.js"],"names":["UserInfoCard","selectedTransaction","Card","CardBody","Row","Col","xl","lg","className","avatar","src","alt","height","width","color","Math","floor","random","initials","content","user","names","contentStyles","borderRadius","fontSize","style","renderImg","CardText","tag","email","username","user_id","phone","status","trans_id","type","trans_type","trans_amount","toLocaleString","currency","balance","narration","ref","remark","moment","trans_date","format","OrderView","props","store","useSelector","state","appiaOrder","dispatch","useDispatch","id","useParams","useState","setUserData","detail","useEffect","getOrder","isUserLoggedIn","JSON","parse","localStorage","getItem","selectedOrder","undefined","md","propTypes","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","func","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","getAllData","a","apiRequest","url","method","response","data","console","log","swal","getFilteredData","orders","params","q","perPage","page","queryLowered","toLowerCase","filteredData","filter","order","orderNumber","includes","student","firstName","createdAt","paginateArray","totalPages","length"],"mappings":"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","file":"static/js/183.dc455741.chunk.js","sourcesContent":["// ** React Imports\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Card, CardBody, CardText, Row, Col } from 'reactstrap'\nimport moment from 'moment'\n\n\nconst UserInfoCard = ({ selectedTransaction }) => {\n\n  const renderImg = () => {\n    if (selectedTransaction !== null && selectedTransaction.avatar) {\n      return <img src={selectedTransaction.avatar} alt='user-avatar' className='img-fluid rounded' height='104' width='104' />\n    } else {\n      const stateNum = Math.floor(Math.random() * 6),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded'\n          content={selectedTransaction.user.names}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(36px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '90px',\n            width: '90px'\n          }}\n        />\n      )\n    }\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <Row>\n          <Col xl='6' lg='12' className='d-flex flex-column justify-content-between border-container-lg'>\n            <div className='user-avatar-section'>\n              <h3>User Details</h3>\n              <div className='d-flex justify-content-start'>\n                {renderImg()}\n                <div className='d-flex flex-column ml-1'>\n                  <div className='user-info mt-2'>\n                    <h4 className='mb-0'>{selectedTransaction.user.names}</h4>\n                    <CardText tag='span'>\n                      {selectedTransaction.user.email}\n                    </CardText>\n                  </div>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Username: </span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.user.username}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>User Id: </span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.user_id}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Phone: </span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.user.phone}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Status:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.status}</h6>\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col xl='6' lg='12' className='d-flex flex-column justify-content-between border-container-lg'>\n            <div className='user-avatar-section'>\n              <h3>Transaction Details</h3>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Transaction Id: </span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.trans_id}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Type:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.type}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Transaction Type:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.trans_type}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Transaction Amount:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.trans_amount.toLocaleString('en-US', { style: 'currency', currency: 'NGN' })}</h6>\n                </div>\n              </div><div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Balance:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.balance.toLocaleString('en-US', { style: 'currency', currency: 'NGN' })}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Narration:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.narration}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Reference:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.ref}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Remark:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{selectedTransaction.remark !== null ? selectedTransaction.remark : \"No Remark\"}</h6>\n                </div>\n              </div>\n              <div className='d-flex align-items-center mr-2 mt-1'>\n                <div className='color-box'>\n                  <span>Transaction Date:</span>\n                </div>\n                <div className='ml-1'>\n                  <h6 className='mb-0'>{moment(selectedTransaction.trans_date).format('lll')}</h6>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getOrder } from '../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap\nimport { Row, Col, Alert, Button } from 'reactstrap'\n\n// ** User View Components\nimport UserInfoCard from './UserInfoCard'\nimport { isUserLoggedIn, apiRequest, swal } from '@utils'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst OrderView = props => {\n  // ** Vars\n  const store = useSelector(state => state.appiaOrder),\n    dispatch = useDispatch(),\n    { id } = useParams()\n\n  const [userData, setUserData] = useState(null)\n  const [detail, setDetail] = useState(null)\n\n  // ** Get user on mount\n  useEffect(() => {\n    dispatch(getOrder(id))\n  }, [dispatch])\n\n\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n\n  return store.selectedOrder !== null && store.selectedOrder !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='12' lg='12' md='12'>\n          <UserInfoCard selectedOrder={store.selectedOrder} detail={detail} />\n        </Col>\n      </Row>\n    </div>\n  ) : \"\"\n}\nexport default OrderView\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","import { paginateArray, sortCompare, apiRequest, swal } from '@utils'\nimport moment from 'moment'\n\nexport const apiUrl = process.env.REACT_APP_API_ENDPOINT\n\n// ** Get all User Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({url:'/orders', method:'GET'}, dispatch)\n    if (response && response.data.data && response.data.status) {\n        await dispatch({\n          type: 'GET_ALL_ORDERS_DATA',\n          data: response.data.data\n        })\n    } else {\n      console.log(response)\n      swal('Oops!', 'Something went wrong.', 'error')\n    }\n  }\n}\n\n// All Users Filtered Data\nexport const getFilteredData = (orders, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 100,  page = 1 } = params\n\n    /* eslint-disable  */\n    const queryLowered = q?.toLowerCase()\n    const filteredData = orders?.filter(\n      order => \n        (order?.orderNumber?.toLowerCase()?.includes(queryLowered) || order?.student.firstName?.toLowerCase()?.includes(queryLowered) || moment(order.createdAt).format('lll').includes(q))\n      )\n  \n    /* eslint-enable  */\n    dispatch({\n      type: 'GET_FILTERED_ORDER_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\n//  Get User\nexport const getOrder = (id) => {\n  return async dispatch => {\n    const response = await apiRequest({url:`/orders/get-detail/${id}`, method:'GET'}, dispatch)\n    if (response && response.data.data && response.data.status) {\n        await dispatch({\n          type: 'GET_ORDER',\n          selectedOrder: response.data.data\n        })\n    } else {\n      console.log(response)\n      swal('Oops!', 'Something went wrong.', 'error')\n    }\n  }\n}\n\n"],"sourceRoot":""}