{"version":3,"sources":["views/pages/authentication/ForgotPassword.js"],"names":["ForgotPassword","useDispatch","useSkin","skin","useState","email","setEmail","isSubmitting","setIsSubmitting","onSubmit","event","errors","a","preventDefault","length","axios","post","response","data","success","swal","message","console","error","useEffect","illustration","source","require","default","isUserLoggedIn","to","className","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","for","required","autoFocus","type","value","name","placeholder","onChange","e","target","Ripple","color","block","disabled","size"],"mappings":"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","file":"static/js/213.9b817f8b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { isUserLoggedIn, swal, apiRequest } from '@utils'\nimport axios from 'axios'\nimport { useSkin } from '@hooks/useSkin'\nimport { ChevronLeft } from 'react-feather'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Row, Col, CardTitle, CardText, Form, FormGroup, Spinner, Label, Input, Button } from 'reactstrap'\nimport '@styles/base/pages/page-auth.scss'\n\nimport { useDispatch } from 'react-redux'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\n\n\nconst ForgotPassword = () => {\n  const dispatch = useDispatch()\n  const [skin, setSkin] = useSkin()\n  const [email, setEmail] = useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n\n  const onSubmit = async (event, errors) => {\n    event?.preventDefault()\n    if (errors && !errors.length) {\n      setIsSubmitting(true)\n      try {\n        const response = await axios.post('https://api.appiawave.com/admin/reset_password', {email})\n        if (response.data.success) {\n          swal('Great job!', response.data.message, 'success')\n        setIsSubmitting(false)\n          setEmail('')\n        } else {\n          swal('Oops!', response.data.message, 'error')\n      }\n      } catch (error) {\n        console.error({ error })\n      }\n    }\n  }\n\n  useEffect(() => {\n    onSubmit()\n  }, [])\n\n\n  const illustration = skin === 'dark' ? 'forgot-password-v2-dark.svg' : 'forgot-password-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  if (!isUserLoggedIn()) {\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/'\n        // onClick={e => e.preventDefault()}\n        >\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ml-1'>Appia</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Forgot Password? ðŸ”’\n              </CardTitle>\n            <CardText className='mb-2'>\n              Enter your email and we'll send you instructions to reset your password\n              </CardText>\n            <AvForm className='auth-forgot-password-form mt-2' onSubmit={onSubmit}>\n              <FormGroup>\n              <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n              <AvInput\n                  required\n                  autoFocus\n                  type='email'\n                  value={email}\n                  id='login-email'\n                  name='login-email'\n                  placeholder='john@example.com'\n                  onChange={e => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <Button.Ripple color='primary' block disabled={isSubmitting}>\n                {isSubmitting && <Spinner color='white' size='sm' />}\n                Send reset link\n                </Button.Ripple>\n            </AvForm>\n            <p className='text-center mt-2'>\n              <Link to='/login'>\n                <ChevronLeft className='mr-25' size={14} />\n                <span className='align-middle'>Back to login</span>\n              </Link>\n            </p>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n} else {\n    return <Redirect to='/' />\n  }\n}\n\nexport default ForgotPassword\n"],"sourceRoot":""}