{"version":3,"sources":["views/tuck-shop/product/edit/Account.js","views/tuck-shop/product/edit/index.js","../node_modules/reactstrap/es/Label.js","views/tuck-shop/product/store/action/index.js"],"names":["UserAccountTab","selectedProduct","dispatch","useDispatch","useState","img","setImg","name","qty","price","status","productData","setProductData","onSubmit","event","errors","a","preventDefault","console","log","length","body","JSON","stringify","apiRequest","url","id","method","response","data","swal","message","getAllData","getProduct","error","useEffect","image","Row","Col","sm","Media","className","color","Math","floor","random","initials","content","contentStyles","borderRadius","fontSize","width","height","style","src","alt","renderUserAvatar","fullName","Button","Ripple","tag","Label","size","type","hidden","onChange","e","reader","FileReader","files","target","onload","result","readAsDataURL","accept","outline","md","FormGroup","for","placeholder","value","required","UserEdit","activeTab","setActiveTab","store","useSelector","state","products","useParams","parseInt","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","onClick","TabContent","TabPane","tabId","Account","Alert","to","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","children","node","check","tagPropType","cssModule","object","xs","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","React","createElement","_extends","getFilteredData","params","q","perPage","page","queryLowered","toLowerCase","filteredData","filter","product","includes","paginateArray","totalPages","productId","deleteProduct"],"mappings":"4bAgOeA,EAlNQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAClBC,EAAWC,cAEjB,EAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsCF,mBAAS,CAC7CG,KAAMN,EAAgBM,KACtBC,IAAKP,EAAgBO,IACrBC,MAAOR,EAAgBQ,MACvBC,OAAQT,EAAgBS,SAJ1B,mBAAOC,EAAP,KAAoBC,EAApB,KAQMC,EAAQ,uCAAG,WAAOC,EAAOC,GAAd,iBAAAC,EAAA,yDACfF,EAAMG,iBACNC,QAAQC,IAAI,CAACJ,YACTA,GAAWA,EAAOK,OAHP,wBAIbF,QAAQC,IAAI,CAACR,gBACPU,EAAOC,KAAKC,UAAUZ,GALf,kBAOYa,YAAW,CAACC,IAAI,oBAAD,OAAqBxB,EAAgByB,IAAMC,OAAO,OAAQN,QAAOnB,GAP5F,OAOL0B,EAPK,OAQXV,QAAQC,IAAI,CAACS,aACTA,EAASC,KAAKnB,QACdoB,YAAK,aAAcF,EAASC,KAAKE,QAAS,WAC1C7B,EAAS8B,eACT9B,EAAS+B,YAAWhC,EAAgByB,KACpCd,EAAe,CACbL,KAAMN,EAAgBM,KACtBC,IAAKP,EAAgBO,IACrBC,MAAOR,EAAgBQ,MACvBC,OAAQT,EAAgBS,WAG5BoB,YAAK,QAASF,EAASC,KAAKE,QAAS,SACrCnB,EAAe,CACbL,KAAMN,EAAgBM,KACtBC,IAAKP,EAAgBO,IACrBC,MAAOR,EAAgBQ,MACvBC,OAAQT,EAAgBS,UAzBjB,kDA6BXQ,QAAQgB,MAAM,CAACA,MAAK,OA7BT,0DAAH,wDA6CdC,qBAAU,WACR,GAAwB,OAApBlC,EACF,OAAIA,EAAgBmC,MAAMhB,OACjBd,EAAOL,EAAgBmC,OAEvB9B,EAAO,QAGjB,CAACL,IAuCJ,OACE,eAACoC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAACC,EAAA,EAAD,CAAOC,UAAU,OAAjB,UAvCmB,WACvB,GAAY,OAARpC,EAAc,CAChB,IAEEqC,EADS,CAAC,gBAAiB,eAAgB,gBAAiB,aAAc,gBAAiB,mBAD5EC,KAAKC,MAAsB,EAAhBD,KAAKE,WAGjC,OACE,cAAC,IAAD,CACEC,UAAQ,EACRJ,MAAOA,EACPD,UAAU,qBACVM,QAAS9C,EAAgBM,KACzByC,cAAe,CACbC,aAAc,EACdC,SAAU,aACVC,MAAO,OACPC,OAAQ,QAEVC,MAAO,CACLD,OAAQ,OACRD,MAAO,UAKb,OACE,qBACEV,UAAU,gDACVa,IAAKjD,EACLkD,IAAI,sBACJH,OAAO,KACPD,MAAM,OAULK,GACD,eAAChB,EAAA,EAAD,CAAOC,UAAU,QAAQpB,MAAI,EAA7B,UACE,+BAAKpB,EAAgBwD,SAArB,OACA,sBAAKhB,UAAU,6BAAf,UACE,eAACiB,EAAA,EAAOC,OAAR,CAAejC,GAAG,aAAakC,IAAKC,IAAOpB,UAAU,aAAaC,MAAM,UAAxE,UACE,sBAAMD,UAAU,oBAAhB,oBACA,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAMqB,KAAM,OAEd,uBAAOC,KAAK,OAAOC,QAAM,EAACtC,GAAG,aAAauC,SAtEvC,SAAAC,GACf,IAAMC,EAAS,IAAIC,WACjBC,EAAQH,EAAEI,OAAOD,MACnBF,EAAOI,OAAS,WACdjE,EAAO6D,EAAOK,SAEhBL,EAAOM,cAAcJ,EAAM,KAgE+CK,OAAO,eAEvE,eAAChB,EAAA,EAAOC,OAAR,CAAejB,MAAM,YAAYiC,SAAO,EAAxC,UACE,sBAAMlC,UAAU,oBAAhB,oBACA,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAQqB,KAAM,qBAO1B,cAACxB,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,SAAD,CAAQ1B,SAAUA,EAAlB,SACE,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKsC,GAAG,IAAIrC,GAAG,KAAf,SACE,eAACsC,EAAA,EAAD,WACE,cAAChB,EAAA,EAAD,CAAOiB,IAAI,OAAX,0BACA,cAAC,UAAD,CACEvE,KAAK,OACLmB,GAAG,OACHqD,YAAY,eACZC,MAAO/E,EAAgBM,KACvB0D,SAAU,SAAAC,GAAC,OAAItD,EAAe,2BAAID,GAAL,IAAkBJ,KAAM2D,EAAEI,OAAOU,UAC9DC,UAAQ,SAKd,cAAC3C,EAAA,EAAD,CAAKsC,GAAG,IAAIrC,GAAG,KAAf,SACE,eAACsC,EAAA,EAAD,WACE,cAAChB,EAAA,EAAD,CAAOiB,IAAI,QAAX,2BACA,cAAC,UAAD,CACEvE,KAAK,QACLmB,GAAG,QACHqD,YAAY,gBACZC,MAAO/E,EAAgBQ,MACvBwD,SAAU,SAAAC,GAAC,OAAItD,EAAe,2BAAID,GAAL,IAAkBF,MAAOyD,EAAEI,OAAOU,UAC/DC,UAAQ,SAKd,cAAC3C,EAAA,EAAD,CAAKsC,GAAG,IAAIrC,GAAG,KAAf,SACE,eAACsC,EAAA,EAAD,WACE,cAAChB,EAAA,EAAD,CAAOiB,IAAI,MAAX,yBACA,cAAC,UAAD,CACEvE,KAAK,MACLmB,GAAG,MACHqD,YAAY,cACZC,MAAO/E,EAAgBO,IACvByD,SAAU,SAAAC,GAAC,OAAItD,EAAe,2BAAID,GAAL,IAAkBH,IAAK0D,EAAEI,OAAOU,UAC7DC,UAAQ,SAKd,cAAC3C,EAAA,EAAD,CAAKsC,GAAG,IAAIrC,GAAG,KAAf,SACE,eAACsC,EAAA,EAAD,WACE,cAAChB,EAAA,EAAD,CAAOiB,IAAI,SAAX,oBACA,eAAC,UAAD,CACEf,KAAK,SACLrC,GAAG,SACHnB,KAAK,SACLyE,MAAO/E,EAAgBS,OACvBuD,SAAU,SAAAC,GAAC,OAAItD,EAAe,2BAAID,GAAL,IAAkBD,OAAQwD,EAAEI,OAAOU,UAChEC,UAAQ,EANV,UAQE,wBAAQD,MAAO/E,EAAgBS,OAAQ+B,UAAU,iBAAjD,SAAmExC,EAAgBS,SACnF,wBAAQsE,MAAM,WAAd,sBACA,wBAAQA,MAAM,eAAd,kCASN,eAAC1C,EAAA,EAAD,CAAKG,UAAU,sCAAsCF,GAAG,KAAxD,UACE,cAACmB,EAAA,EAAD,CAAQjB,UAAU,4BAA4BsB,KAAK,SAASrB,MAAM,UAAlE,0BAGA,cAACgB,EAAA,EAAD,CAAQhB,MAAM,YAAYiC,SAAO,EAAjC,iC,2HClICO,UAhEE,WAEf,MAAkC9E,mBAAS,KAA3C,mBAAO+E,EAAP,KAAkBC,EAAlB,KACEC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACnCtF,EAAWC,cACTuB,EAAO+D,cAAP/D,GAUJ,OAJAS,qBAAU,WACRjC,EAAS+B,YAAWyD,SAAShE,OAC5B,CAACxB,IAE6B,OAA1BmF,EAAMpF,sBAAsD0F,IAA1BN,EAAMpF,gBAC7C,cAACoC,EAAA,EAAD,CAAKI,UAAU,gBAAf,SACE,cAACH,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAACqD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAUpD,UAAU,OAApB,UACE,cAACqD,EAAA,EAAD,CAAKC,OAAK,EAAV,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,OAAsB,MAAdf,EAAmBgB,QAAS,kBAdrCf,EAckD,MAA1D,UACE,cAAC,IAAD,CAAMtB,KAAM,KACZ,sBAAMrB,UAAU,iCAAhB,4BAgBN,cAAC2D,EAAA,EAAD,CAAYjB,UAAWA,EAAvB,SACE,cAACkB,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,EAAD,CAAYtG,gBAAiBoF,EAAMpF,+BAc/C,eAACuG,EAAA,EAAD,CAAO9D,MAAM,SAAb,UACE,oBAAID,UAAU,gBAAd,6BACA,sBAAKA,UAAU,aAAf,4BACkBf,EADlB,4CAC8D,cAAC,IAAD,CAAM+E,GAAG,iBAAT,gC,6EC/EpE,6EAOIC,EAAqBC,IAAUC,UAAU,CAACD,IAAUE,OAAQF,IAAUG,SACtEC,EAAcJ,IAAUC,UAAU,CAACD,IAAUK,KAAML,IAAUG,OAAQH,IAAUE,OAAQF,IAAUM,MAAM,CACzGnD,KAAM4C,EACNQ,MAAOR,EACPS,OAAQT,MAENU,EAAY,CACdC,SAAUV,IAAUW,KACpBtD,OAAQ2C,IAAUK,KAClBO,MAAOZ,IAAUK,KACjBlD,KAAM6C,IAAUG,OAChBhC,IAAK6B,IAAUG,OACflD,IAAK4D,cACL/E,UAAWkE,IAAUG,OACrBW,UAAWd,IAAUe,OACrBC,GAAIZ,EACJxE,GAAIwE,EACJnC,GAAImC,EACJa,GAAIb,EACJc,GAAId,EACJe,OAAQnB,IAAUoB,OAEhBC,EAAe,CACjBpE,IAAK,QACLkE,OAzBc,CAAC,KAAM,KAAM,KAAM,KAAM,OA4BrCG,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDvE,EAAQ,SAAewE,GACzB,IAAI5F,EAAY4F,EAAM5F,UAClBgF,EAAYY,EAAMZ,UAClBzD,EAASqE,EAAMrE,OACf8D,EAASO,EAAMP,OACfQ,EAAMD,EAAMzE,IACZ2D,EAAQc,EAAMd,MACdzD,EAAOuE,EAAMvE,KACbyE,EAAUF,EAAMvD,IAChB0D,EAAaC,YAA8BJ,EAAO,CAAC,YAAa,YAAa,SAAU,SAAU,MAAO,QAAS,OAAQ,QAEzHK,EAAa,GACjBZ,EAAOa,SAAQ,SAAUR,EAAUS,GACjC,IAAIC,EAAaR,EAAMF,GAGvB,UAFOK,EAAWL,GAEbU,GAA6B,KAAfA,EAAnB,CAIA,IACIC,EADAZ,GAAQU,EAGZ,GAAIG,mBAASF,GAAa,CACxB,IAAIG,EAEAC,EAAkBf,EAAO,IAAM,IAAMC,EAAW,IACpDW,EAAWb,EAAmBC,EAAMC,EAAUU,EAAW/E,MACzD4E,EAAWQ,KAAKC,0BAAgBC,MAAYJ,EAAc,IAAgBF,GAAYD,EAAW/E,MAA4B,KAApB+E,EAAW/E,KAAakF,EAAY,QAAUC,EAAkBJ,EAAW3B,OAAS2B,EAAW3B,OAA8B,IAArB2B,EAAW3B,MAAa8B,EAAY,SAAWC,EAAkBJ,EAAW1B,QAAU0B,EAAW1B,QAAgC,IAAtB0B,EAAW1B,OAAc6B,KAAgBvB,QAErWqB,EAAWb,EAAmBC,EAAMC,EAAUU,GAC9CH,EAAWQ,KAAKJ,OAGpB,IAAIO,EAAUF,0BAAgBC,IAAW3G,IAAWuB,GAAS,YAAmBuD,GAAQ,qBAA4BzD,GAAO,kBAAoBA,EAAc4E,IAAYA,EAAWtH,QAAS,kBAA2BqG,GACxN,OAAoB6B,IAAMC,cAAcjB,EAAKkB,YAAS,CACpDjB,QAASA,GACRC,EAAY,CACb/F,UAAW4G,MAIfxF,EAAMuD,UAAYA,EAClBvD,EAAMmE,aAAeA,EACNnE,O,+MCnFF7B,EAAa,WACxB,8CAAO,WAAM9B,GAAN,eAAAc,EAAA,sEACkBQ,YAAW,CAACC,IAAI,YAAaE,OAAO,OAAQzB,GAD9D,aACC0B,EADD,SAEWA,EAASC,KAAKA,MAAQD,EAASC,KAAKnB,QAF/C,gCAGKR,EAAS,CACb6D,KAAM,wBACNlC,KAAMD,EAASC,KAAKA,OALrB,8BAQHX,QAAQC,IAAIS,GACZE,YAAK,QAAS,wBAAyB,SATpC,4CAAP,uDAeW2H,EAAkB,SAACjE,EAAUkE,GACxC,8CAAO,WAAMxJ,GAAN,6BAAAc,EAAA,wDACwC0I,EAArCC,SADH,MACO,GADP,IACwCD,EAA7BE,eADX,MACqB,IADrB,IACwCF,EAAbG,YAD3B,MACkC,EADlC,EAICC,EAJD,OAIgBH,QAJhB,IAIgBA,OAJhB,EAIgBA,EAAGI,cAClBC,EALD,OAKgBxE,QALhB,IAKgBA,OALhB,EAKgBA,EAAUyE,QAC7B,SAAAC,GAAO,sBACJA,QADI,IACJA,GADI,UACJA,EAAS3J,YADL,iBACJ,EAAewJ,qBADX,aACJ,EAA8BI,SAASL,MAK5C5J,EAAS,CACP6D,KAAM,4BACNlC,KAAMuI,YAAcJ,EAAcJ,EAASC,GAC3CQ,WAAYL,EAAa5I,OACzBsI,WAhBG,2CAAP,uDAsBWzH,EAAa,SAACqI,GACzB,8CAAO,WAAMpK,GAAN,eAAAc,EAAA,sEACkBQ,YAAW,CAACC,IAAI,wBAAD,OAAyB6I,GAAa3I,OAAO,OAAQzB,GADtF,aACC0B,EADD,SAEWA,EAASC,KAAKA,MAAQD,EAASC,KAAKnB,QAF/C,gCAGKR,EAAS,CACb6D,KAAM,gBACN9D,gBAAiB2B,EAASC,KAAKA,OALhC,8BAQHX,QAAQC,IAAIS,GACZE,YAAK,QAAS,wBAAyB,SATpC,4CAAP,uDAcWyI,EAAgB,SAACD,GAC5B,8CAAO,WAAMpK,GAAN,eAAAc,EAAA,sEACkBQ,YAAW,CAACC,IAAI,oBAAD,OAAqB6I,GAAa3I,OAAO,OAAQzB,GADlF,YACC0B,EADD,UAEWA,EAASC,KAAKnB,OAFzB,yCAGMkB,EAASC,MAHf,OAKHX,QAAQC,IAAIS,GACZE,YAAK,QAAS,wBAAyB,SANpC,2CAAP","file":"static/js/174.db0e1d88.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Lock, Edit, Trash2 } from 'react-feather'\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, CustomInput } from 'reactstrap'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\nimport { getAllData, getProduct } from '../store/action'\nimport { swal, apiRequest } from '@utils'\n\nconst UserAccountTab = ({ selectedProduct }) => {\n  const dispatch = useDispatch()\n  // ** States\n  const [img, setImg] = useState(null)\n  const [productData, setProductData] = useState({\n    name: selectedProduct.name,\n    qty: selectedProduct.qty,\n    price: selectedProduct.price,\n    status: selectedProduct.status\n    // image: 'https://res.cloudinary.com/bringforthjoy/image/upload/v1621720743/INVESTA/appia_reward_image_placeholder_um7q6g.jpg'\n  })\n\n  const onSubmit = async (event, errors) => {\n    event.preventDefault()\n    console.log({errors})\n    if (errors && !errors.length) {\n      console.log({productData})\n      const body = JSON.stringify(productData)\n      try {\n        const response = await apiRequest({url:`/products/update/${selectedProduct.id}`, method:'POST', body}, dispatch)\n        console.log({response})\n        if (response.data.status) {\n            swal('Great job!', response.data.message, 'success')\n            dispatch(getAllData())\n            dispatch(getProduct(selectedProduct.id))\n            setProductData({\n              name: selectedProduct.name,\n              qty: selectedProduct.qty,\n              price: selectedProduct.price,\n              status: selectedProduct.status\n            })\n        } else {\n          swal('Oops!', response.data.message, 'error')\n          setProductData({\n            name: selectedProduct.name,\n            qty: selectedProduct.qty,\n            price: selectedProduct.price,\n            status: selectedProduct.status\n          })\n        }\n      } catch (error) {\n        console.error({error})\n      }\n    }\n  }\n\n  // ** Function to change user image\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setImg(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  // ** Update user image on mount or change\n  useEffect(() => {\n    if (selectedProduct !== null) {\n      if (selectedProduct.image.length) {\n        return setImg(selectedProduct.image)\n      } else {\n        return setImg(null)\n      }\n    }\n  }, [selectedProduct])\n\n  // ** Renders User\n  const renderUserAvatar = () => {\n    if (img === null) {\n      const stateNum = Math.floor(Math.random() * 6),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded mr-2 my-25'\n          content={selectedProduct.name}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(36px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '90px',\n            width: '90px'\n          }}\n        />\n      )\n    } else {\n      return (\n        <img\n          className='user-avatar rounded mr-2 my-25 cursor-pointer'\n          src={img}\n          alt='user profile avatar'\n          height='90'\n          width='90'\n        />\n      )\n    }\n  }\n\n  return (\n    <Row>\n      <Col sm='12'>\n        <Media className='mb-2'>\n          {renderUserAvatar()}\n          <Media className='mt-50' body>\n            <h4>{selectedProduct.fullName} </h4>\n            <div className='d-flex flex-wrap mt-1 px-0'>\n              <Button.Ripple id='change-img' tag={Label} className='mr-75 mb-0' color='primary'>\n                <span className='d-none d-sm-block'>Change</span>\n                <span className='d-block d-sm-none'>\n                  <Edit size={14} />\n                </span>\n                <input type='file' hidden id='change-img' onChange={onChange} accept='image/*' />\n              </Button.Ripple>\n              <Button.Ripple color='secondary' outline>\n                <span className='d-none d-sm-block'>Remove</span>\n                <span className='d-block d-sm-none'>\n                  <Trash2 size={14} />\n                </span>\n              </Button.Ripple>\n            </div>\n          </Media>\n        </Media>\n      </Col>\n      <Col sm='12'>\n        <AvForm onSubmit={onSubmit}>\n          <Row>\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='name'>Product Name</Label>\n                <AvInput \n                  name='name' \n                  id='name' \n                  placeholder='Product Name' \n                  value={selectedProduct.name}\n                  onChange={e => setProductData({...productData, name: e.target.value})}\n                  required \n                />\n                {/* <Input type='text' id='name' placeholder='Name' defaultValue={selectedProduct.name} /> */}\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='price'>Product Price</Label>\n                <AvInput \n                  name='price' \n                  id='price' \n                  placeholder='Product Price' \n                  value={selectedProduct.price}\n                  onChange={e => setProductData({...productData, price: e.target.value})}\n                  required \n                />\n                {/* <Input type='text' id='price' placeholder='Price' defaultValue={selectedProduct.price} /> */}\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='qty'>Product Qty</Label>\n                <AvInput \n                  name='qty' \n                  id='qty' \n                  placeholder='Product Qty' \n                  value={selectedProduct.qty}\n                  onChange={e => setProductData({...productData, qty: e.target.value})}\n                  required \n                />\n                {/* <Input type='text' id='qty' placeholder='Qty' defaultValue={selectedProduct.qty} /> */}\n              </FormGroup>\n            </Col>\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='status'>Status</Label>\n                <AvInput \n                  type='select' \n                  id='status' \n                  name='status' \n                  value={selectedProduct.status}\n                  onChange={e => setProductData({...productData, status: e.target.value})}\n                  required\n                >\n                  <option value={selectedProduct.status} className='text-cpitalize'>{selectedProduct.status}</option>\n                  <option value='in stock'>In Stock</option>\n                  <option value='out of stock'>Out Of Stock</option>\n                </AvInput>\n                {/* <Input type='select' name='status' id='status' defaultValue={selectedProduct.status}>\n                  <option value='in stock'>In Stock</option>\n                  <option value='out of stock'>Out Of Stock</option>\n                </Input> */}\n              </FormGroup>\n            </Col>\n            \n            <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n              <Button className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n                Save Changes\n              </Button>\n              <Button color='secondary' outline>\n                Reset\n              </Button>\n            </Col>\n          </Row>\n          </AvForm>\n      </Col>\n    </Row>\n  )\n}\nexport default UserAccountTab\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** User Edit Components\nimport SocialTab from './Social'\nimport AccountTab from './Account'\nimport InfoTab from './Information'\n\n// ** Store & Actions\nimport { getProduct } from '../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport { User, Info, Share2 } from 'react-feather'\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UserEdit = () => {\n  // ** States & Vars\n  const [activeTab, setActiveTab] = useState('1'),\n    store = useSelector(state => state.products),\n    dispatch = useDispatch(),\n    { id } = useParams()\n\n  // ** Function to toggle tabs\n  const toggle = tab => setActiveTab(tab)\n\n  // ** Function to get user on mount\n  useEffect(() => {\n    dispatch(getProduct(parseInt(id)))\n  }, [dispatch])\n\n  return store.selectedProduct !== null && store.selectedProduct !== undefined ? (\n    <Row className='app-user-edit'>\n      <Col sm='12'>\n        <Card>\n          <CardBody className='pt-2'>\n            <Nav pills>\n              <NavItem>\n                <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n                  <User size={14} />\n                  <span className='align-middle d-none d-sm-block'>Product</span>\n                </NavLink>\n              </NavItem>\n              {/* <NavItem>\n                <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\n                  <Info size={14} />\n                  <span className='align-middle d-none d-sm-block'>Information</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\n                  <Share2 size={14} />\n                  <span className='align-middle d-none d-sm-block'>Social</span>\n                </NavLink>\n              </NavItem> */}\n            </Nav>\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId='1'>\n                <AccountTab selectedProduct={store.selectedProduct} />\n              </TabPane>\n              {/* <TabPane tabId='2'>\n                <InfoTab />\n              </TabPane>\n              <TabPane tabId='3'>\n                <SocialTab />\n              </TabPane> */}\n            </TabContent>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Users not found</h4>\n      <div className='alert-body'>\n        Users with id: {id} doesn't exist. Check list of all Users: <Link to='/app/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default UserEdit\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import { paginateArray, sortCompare, apiRequest, swal } from '@utils'\n\nexport const apiUrl = process.env.REACT_APP_API_ENDPOINT\n\n// ** Get all User Data\nexport const getAllData = () => {\n  return async dispatch => {\n    const response = await apiRequest({url:'/products', method:'GET'}, dispatch)\n    if (response && response.data.data && response.data.status) {\n        await dispatch({\n          type: 'GET_ALL_PRODUCTS_DATA',\n          data: response.data.data\n        })\n    } else {\n      console.log(response)\n      swal('Oops!', 'Something went wrong.', 'error')\n    }\n  }\n}\n\n// All Users Filtered Data\nexport const getFilteredData = (products, params) => {\n  return async dispatch => {\n    const { q = '', perPage = 100,  page = 1 } = params\n\n    /* eslint-disable  */\n    const queryLowered = q?.toLowerCase()\n    const filteredData = products?.filter(\n      product => \n        (product?.name?.toLowerCase()?.includes(queryLowered))\n      )\n  \n    /* eslint-enable  */\n\n    dispatch({\n      type: 'GET_FILTERED_PRODUCT_DATA',\n      data: paginateArray(filteredData, perPage, page),\n      totalPages: filteredData.length,\n      params\n    })\n  }\n}\n\n//  Get User\nexport const getProduct = (productId) => {\n  return async dispatch => {\n    const response = await apiRequest({url:`/products/get-detail/${productId}`, method:'GET'}, dispatch)\n    if (response && response.data.data && response.data.status) {\n        await dispatch({\n          type: 'GET_A_PRODUCT',\n          selectedProduct: response.data.data\n        })\n    } else {\n      console.log(response)\n      swal('Oops!', 'Something went wrong.', 'error')\n    }\n  }\n}\n\nexport const deleteProduct = (productId) => {\n  return async dispatch => {\n    const response = await apiRequest({url:`/products/delete/${productId}`, method:'GET'}, dispatch)\n    if (response && response.data.status) {\n        return response.data\n    } else {\n      console.log(response)\n      swal('Oops!', 'Something went wrong.', 'error')\n    }\n  }\n}\n\n"],"sourceRoot":""}